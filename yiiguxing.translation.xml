<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogWidth" value="578" />
    <option name="newTranslationDialogX" value="845" />
    <option name="newTranslationDialogY" value="450" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="desugar" />
      <item value="Specifies a sorted list of flavors that the plugin should try to use from a given dimension. The following tells the plugin that, when encountering a dependency that includes a &quot;minApi&quot; dimension, it should select the &quot;minApi18&quot; flavor. You can include additional flavor names to provide a sorted list of fallbacks for the dimension." />
      <item value="Specifies a sorted list of flavors that the plugin should try to use from&#10;    // a given dimension. The following tells the plugin that, when encountering a dependency that includes a &quot;minApi&quot; dimension, it should select the &quot;minApi18&quot; flavor. You can include additional flavor names to provide a sorted list of fallbacks for the dimension." />
      <item value="Specifies a sorted list of flavors that the plugin should try to use from&#10;    // a given dimension. The following tells the plugin that, when encountering&#10;    // a dependency that includes a &quot;minApi&quot; dimension, it should select the &quot;minApi18&quot; flavor. You can include additional flavor names to provide a sorted list of fallbacks for the dimension." />
      <item value="Specifies a sorted list of flavors that the plugin should try to use from&#10;    // a given dimension. The following tells the plugin that, when encountering&#10;    // a dependency that includes a &quot;minApi&quot; dimension, it should select the&#10;    // &quot;minApi18&quot; flavor. You can include additional flavor names to provide a sorted list of fallbacks for the dimension." />
      <item value="Specifies a sorted list of flavors that the plugin should try to use from&#10;    // a given dimension. The following tells the plugin that, when encountering&#10;    // a dependency that includes a &quot;minApi&quot; dimension, it should select the&#10;    // &quot;minApi18&quot; flavor. You can include additional flavor names to provide a&#10;    // sorted list of fallbacks for the dimension." />
      <item value="forward" />
      <item value="forward Capture" />
      <item value="Intent" />
      <item value="dsd" />
      <item value="fire Event Sync Call" />
      <item value="api" />
      <item value="implementation" />
      <item value="meta-data" />
      <item value="Laser" />
      <item value="baggage" />
      <item value="Stream" />
      <item value="bagtrip" />
      <item value="sophix" />
      <item value="MUC" />
      <item value="172.28.31.238" />
      <item value="ScrollView can host only one direct child" />
      <item value="Remainder" />
      <item value="dispatch" />
      <item value="Called to process key events. You can override this to intercept all key events before they are dispatched to the window. Be sure to call this implementation for key events that should be handled normally." />
      <item value="실행에 필요한 권한이 설정 되지 않았습니다" />
      <item value="release WakeLock." />
      <item value="Setup always wake up" />
      <item value="Setup basic wake up state" />
      <item value="RESERVED" />
      <item value="hex" />
      <item value="on Editor Action" />
      <item value="private List View bags List View" />
      <item value="private List View bags ListView" />
      <item value="private ListView bags ListView" />
      <item value="private ListView bagsListView" />
      <item value="private ListView bagsListView;" />
      <item value="bags List View" />
      <item value="List View" />
      <item value="Licensing support for commercial plugins from JetBrains Marketplace" />
      <item value="The consumer-visible brand with which the producthardware will be associated, if any" />
      <item value="memaction" />
      <item value="Tagmemory" />
      <item value="标记" />
      <item value="标记&#10;" />
      <item value="Releases a permit, returning it to the semaphore. &lt;p&gt;Releases a permit, increasing the number of available permits by one. If any threads are trying to acquire a permit, then one is selected and given the permit that was just released. That thread is (re)enabled for thread scheduling purposes. &lt;p&gt;There is no requirement that a thread that releases a permit must have acquired that permit by calling {@link acquire}. Correct usage of a semaphore is established by programming convention in the application." />
      <item value="boarding Number" />
      <item value="Boarding" />
      <item value="local" />
      <item value="local&#10;" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="149" />
        <entry key="ENGLISH" value="150" />
        <entry key="FILIPINO" value="1" />
        <entry key="KOREAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="JAPANESE" value="4" />
        <entry key="GREEK" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1616569964544" />
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="primaryLanguage" value="CHINESE" />
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
  </component>
</application>