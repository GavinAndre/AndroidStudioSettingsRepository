<application>
  <component name="AppStorage">
    <histories>
      <item value="* @param reportedProperties the Set for desired properties and their corresponding callback and context. Cannot be {@code null}." />
      <item value="subscribe Desired Property" />
      <item value="provisioning" />
      <item value="标志位" />
      <item value="静止" />
      <item value="静止状态" />
      <item value="在关门与静止状态时判断漂移" />
      <item value="在关门与静止状态时判断是否有漂移" />
      <item value="在关门与静止状态时判断是否有偏移" />
      <item value="在关门与静止状态下" />
      <item value="在半夜12点进行校准" />
      <item value="将校准逻辑放在半夜12点" />
      <item value="reformat" />
      <item value="Returns the closest {@code long} to the argument, with ties * rounding to positive infinity." />
      <item value="Schimitt" />
      <item value="Session" />
      <item value="校准" />
      <item value="矫正" />
      <item value="漂移" />
      <item value="偏移" />
      <item value="calibrate" />
      <item value="//---- simplified that all these are kind of auto exposure" />
      <item value="0 x 002" />
      <item value="LogUtil.e(TAG, &quot;run&quot;, &quot;time out 10 times, stop upload service thread&quot;);" />
      <item value="通过摄像头api返回值来重启app" />
      <item value="做法" />
      <item value="method" />
      <item value="app重启方式通过" />
      <item value="更改app重启方式" />
      <item value="根据摄像头api返回结果" />
      <item value="consideration" />
      <item value="// unconnected sockets have not been implemented." />
      <item value="* Returns the IP address string in textual presentation." />
      <item value="undo" />
      <item value="do Current Angle Integral" />
      <item value="Integral" />
      <item value="overtime meal booking time is too short, easily over time" />
      <item value="容易超过时间" />
      <item value="超过时间" />
      <item value="想预订的时候超过时间" />
      <item value="超时" />
      <item value="有时候预订不到" />
      <item value="预订不到" />
      <item value="加班餐" />
      <item value="if the current thread is * {@linkplain Thread#interrupt() interrupted} by another * thread while it is waiting, then the wait is ended and * an {@link InterruptedException} is thrown." />
      <item value="the exit value of the subprocess represented by this * {@code Process} object. By convention, the value * {@code 0} indicates normal termination." />
      <item value="Causes the current thread to wait, if necessary, until the * process represented by this {@code Process} object has * terminated. This method returns immediately if the subprocess * has already terminated. If the subprocess has not yet * terminated, the calling thread will be blocked until the * subprocess exits." />
      <item value="Key code constant: Directional Pad Down key" />
      <item value="Directional Pad Down key" />
      <item value="May also be synthesized from trackball motions" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="96" />
        <entry key="ENGLISH" value="97" />
        <entry key="DUTCH" value="2" />
        <entry key="PORTUGUESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="primaryLanguage" value="CHINESE" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="showStatusIcon" value="false" />
  </component>
</application>