<application>
  <component name="AppStorage">
    <histories>
      <item value="Sas URI response message had no payload" />
      <item value="payload" />
      <item value="&lt;b&gt;SetSASTokenExpiryTime&lt;/b&gt; - this option is applicable for HTTP/ AMQP/MQTT. This option specifies the interval in seconds after which SASToken expires. If the transport is already open then setting this option will restart the transport with the updated expiry time, and will use that expiry time length for all subsequently generated sas tokens. The value is expected to be of type {@code long}." />
      <item value="2400" />
      <item value="checking if another retry attempt should be made" />
      <item value="Completes all current outstanding requests and closes the IoT Hub client. Must be called to terminate the background thread that is sending data to IoT Hub. After {@code closeNow()} is called, the IoT Hub client is no longer usable. If the client is already closed, the function shall do nothing. @deprecated : As of release 1.1.25 this call is replaced by {@link #closeNow()}" />
      <item value="Must be called to terminate the background thread that is sending data to IoT Hub. After {@code closeNow()} is called, the IoT Hub client is no longer usable. If the client is already closed, the function shall do nothing." />
      <item value="Closes the IoT Hub client by releasing any resources held by client. When closeNow is called all the messages that were in transit or pending to be sent will be informed to the user in the callbacks and any existing connection to IotHub will be closed." />
      <item value="Set SAS Token Expiry Time" />
      <item value="@throws IllegalStateException if the client has not been opened yet or is already closed." />
      <item value="if the message provided is {@code null}." />
      <item value="* Asynchronously sends an event message to the IoT Hub." />
      <item value="context is the 3rd param of sendEventAsync()" />
      <item value="the previous value associated with {@code key}, or {@code null} if there was no mapping for {@code key}" />
      <item value="value to be associated with the specified key" />
      <item value="key with which the specified value is to be associated" />
      <item value="&lt;p&gt;The value can be retrieved by calling the {@code get} method with a key that is equal to the original key." />
      <item value="Maps the specified key to the specified value in this table. Neither the key nor the value can be null." />
      <item value="反序列化" />
      <item value="on site" />
      <item value="onsite" />
      <item value="一站式维修" />
      <item value="一站维修" />
      <item value="一键" />
      <item value="增加维修工单" />
      <item value="忽略一些重复注册的情况" />
      <item value="增加更改热点密码功能" />
      <item value="改进摄像头恢复逻辑" />
      <item value="加快拍照速度" />
      <item value="防止int越界" />
      <item value="冰箱温度兼容107和108版本" />
      <item value="兼容107和108版本的冰箱温度" />
      <item value="兼容" />
      <item value="occlusion mitigation" />
      <item value="Sloth occlusion mitigation" />
      <item value="Finds all objects that fulfill the query conditions." />
      <item value="Only one thread at a time can own an object's monitor." />
      <item value="For objects of type {@code Class,} by executing a synchronized static method of that class." />
      <item value="By executing the body of a {@code synchronized} statement that synchronizes on the object." />
      <item value="By executing the body of a {@code synchronized} statement that synchronizes on the object. For objects of type {@code Class,} by executing a" />
      <item value="By executing a synchronized instance method of that object." />
      <item value="This method should only be called by a thread that is the owner of this object's monitor. A thread becomes the owner of the object's monitor in one of three ways:" />
      <item value="The awakened thread will not be able to proceed until the current thread relinquishes the lock on this object. The awakened thread will compete in the usual manner with any other threads that might be actively competing to synchronize on this object; for example, the awakened thread enjoys no reliable privilege or disadvantage in being the next thread to lock this object." />
      <item value="Wakes up a single thread that is waiting on this object's monitor. If any threads are waiting on this object, one of them is chosen to be awakened. The choice is arbitrary and occurs at the discretion of the implementation. A thread waits on an object's monitor by calling one of the {@code wait} methods." />
      <item value="MESSAGE EXPIRED" />
      <item value="process Image Path" />
      <item value="&lt;b&gt;SetMinimumPollingInterval&lt;/b&gt; - this option is applicable only when the transport configured with this client is HTTP. This option specifies the interval in milliseconds between calls to the service checking for availability of new messages. The value is expected to be of type {@code long}." />
      <item value="&lt;b&gt;SetReceiveInterval&lt;/b&gt; - this option is applicable to all protocols in case of HTTPS protocol, this option acts the same as {@code SetMinimumPollingInterval} in case of MQTT and AMQP protocols, this option specifies the interval in millisecods between spawning a thread that dequeues a message from the SDK's queue of received messages." />
      <item value="&lt;b&gt;SetSendInterval&lt;/b&gt; - this option is applicable to all protocols. This value sets the period (in milliseconds) that this SDK spawns threads to send queued messages. Even if no message is queued, this thread will be spawned." />
      <item value="@deprecated Use {@link #getFileUploadSasUri(FileUploadSasUriRequest)} to get the SAS URI, use the azure storage SDK to upload a file to that SAS URI, and then use {@link #completeFileUploadAsync(FileUploadCompletionNotification)} to notify Iot Hub that your file upload has completed, successfully or otherwise. This method does all three of these tasks for you, but has limited configuration options." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="385" />
        <entry key="ENGLISH" value="386" />
        <entry key="DUTCH" value="3" />
        <entry key="PORTUGUESE" value="3" />
        <entry key="JAPANESE" value="2" />
        <entry key="SLOVAK" value="3" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="primaryLanguage" value="CHINESE" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
  </component>
</application>