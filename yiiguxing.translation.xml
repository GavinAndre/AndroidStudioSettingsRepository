<application>
  <component name="AppStorage">
    <histories>
      <item value="overtime meal booking time is too short, easily over time" />
      <item value="容易超过时间" />
      <item value="超过时间" />
      <item value="想预订的时候超过时间" />
      <item value="超时" />
      <item value="有时候预订不到" />
      <item value="预订不到" />
      <item value="加班餐" />
      <item value="if the current thread is * {@linkplain Thread#interrupt() interrupted} by another * thread while it is waiting, then the wait is ended and * an {@link InterruptedException} is thrown." />
      <item value="the exit value of the subprocess represented by this * {@code Process} object. By convention, the value * {@code 0} indicates normal termination." />
      <item value="Causes the current thread to wait, if necessary, until the * process represented by this {@code Process} object has * terminated. This method returns immediately if the subprocess * has already terminated. If the subprocess has not yet * terminated, the calling thread will be blocked until the * subprocess exits." />
      <item value="Key code constant: Directional Pad Down key" />
      <item value="Directional Pad Down key" />
      <item value="May also be synthesized from trackball motions" />
      <item value="May also be synthesized from trackball motions." />
      <item value="Key code constant: Directional Pad Down key." />
      <item value="do Current Angle Integral" />
      <item value="judge And Change Door State 2 Closed Or Opened" />
      <item value="door State" />
      <item value="action Count" />
      <item value="* A constant describing an accelerometer sensor type." />
      <item value="mis Wake vals" />
      <item value="8000" />
      <item value="使用新的替换旧的" />
      <item value="设备节点" />
      <item value="记录" />
      <item value="hard code" />
      <item value="// appending '%' so we can allow other characters to be before and after the query string" />
      <item value="unopened" />
      <item value="去除" />
      <item value="* Performs the given [action] on each element and returns the collection itself afterwards." />
      <item value="deploy" />
      <item value="fridge" />
      <item value="please scan one cam code at least" />
      <item value="at least" />
      <item value="block" />
      <item value="restore" />
      <item value="indices" />
      <item value="Objects of this type are received from the Github API, therefore all the fields are annotated * with the serialized name." />
      <item value="Immutable model class for a Github repo that holds all the information about a repository." />
      <item value="This class also defines the Room repos table, where the repo [id] is the primary key." />
      <item value="No connection established" />
      <item value="请等待几秒钟" />
      <item value="ticket" />
      <item value="tv district" />
      <item value="province" />
      <item value="payload" />
      <item value="DON'T do this copy in a real app, it is just convenient here for the demo :) // because reddit randomizes scores, we want to pass it as a payload to minimize // UI updates between refreshes" />
      <item value="randomizes" />
      <item value="Posts" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="73" />
        <entry key="ENGLISH" value="73" />
        <entry key="DUTCH" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="primaryLanguage" value="CHINESE" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="showStatusIcon" value="false" />
  </component>
</application>